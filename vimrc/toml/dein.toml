# Required:
[[plugins]]
repo = 'Shougo/dein.vim'

# To be 補完が効く世界
[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
let g:deoplete#enable_at_startup = 1
let g:deoplete#enable_auto_delimiter = 0
let g:deoplete#enable_smart_case = 1
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
'''
depends = ['neco-vim', 'neco-syntax']

# 目に優しいカラースキーム
[[plugins]]
repo = 'morhetz/gruvbox'

[[plugins]]
repo = 'Shougo/neco-vim'

[[plugins]]
repo = 'Shougo/neco-syntax'

# snippets関連
[[plugins]]
repo = 'SirVer/ultisnips'
hook_add = '''
let g:UltiSnipsExpandTrigger="<C-f>"
let g:UltiSnipsEditSplit="vertical"
let g:UltiSnipsSnippetsDir = '~/dotfiles/vimrc/snippets'
set runtimepath+=~/dotfiles/vimrc/snippets

'''

[[plugins]]
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'Townk/vim-autoclose'

[[plugins]]
repo = 'scrooloose/syntastic'
on_ft = ['dart']

[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = "airblade/vim-gitgutter"
hook_add = '''
set signcolumn=yes
let g:gitgutter_async = 1
let g:gitgutter_signmodified = 'rw'
highlight GitGutterAdd ctermfg=green
highlight GitGutterChange ctermfg=yellow
highlight GitGutterDelete ctermfg=red
highlight GitGutterChangeDelete ctermfg=yellow
'''

[[plugins]]
repo = "tpope/vim-fugitive"

[[plugins]]
repo = 'anned20/vimsence'

[[plugins]]
repo = 'vim-airline/vim-airline'

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
hook_add = '''
let g:airline_theme = 'dark'
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#buffer_idx_mode = 1
let g:airline#extensions#tabline#fnamemod = ':t'
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'w0rp/ale'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'Shougo/unite.vim'
hook_add = '''
let g:unite_source_history_yank_enable = 1
try
  let g:unite_source_rec_async_command='ag --nocolor --nogroup -g ""'
  call unite#filters#matcher_default#use(['matcher_fuzzy'])
catch
endtry
" search a file in the filetree
nnoremap <space><space> :split<cr> :<C-u>Unite -start-insert file_rec/async<cr>
" reset not it is <C-l> normally
:nnoremap <space>r <Plug>(unite_restart)
'''

[[plugins]]
repo = 'simeji/winresizer'

# dart専用
[[plugins]]
repo = 'dart-lang/dart-vim-plugin'
on_ft = ['dart']

[[plugins]]
repo = 'thosakwe/vim-flutter'
on_ft = ['dart']

# python専用
[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = ['python']

[[plugins]]
repo = 'hynek/vim-python-pep8-indent'
on_ft = ['python']

# tomlのsyantax
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'javascript.ejs']

# TypeScript専用
[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']

[[plugins]]
repo = 'Quramy/tsuquyomi'
on_ft = ['typescript']

[[plugins]]
repo = 'tpope/vim-markdown'
on_ft = ['markdown']

[[plugins]]
repo = 'iamcco/markdown-preview.vim'
on_ft = ['markdown']


# JavaScript専用
[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript'] 

# kotlin専用
[[plugins]]
repo = 'udalov/kotlin-vim'
on_ft = ['kotlin']

[[plugins]]
repo = 'othree/xml.vim'
on_ft = ['xml']

# Rubyの自動補完
[[plugins]]
repo = 'Shougo/deoplete-rct'
on_ft = ['ruby']

# Rubyの自動補完
[[plugins]]
repo = 'fishbullet/deoplete-ruby'
on_ft = ['ruby']

# Rubyの自動補完
[[plugins]]
repo = 'osyo-manga/vim-monster'
on_i = 1
hook_add = '''
let g:monster#completion#rcodetools#backend = "async_rct_complete"
let g:deoplete#sources#omni#input_patterns = {
    \ "ruby" : '[^. *\t]\.\w*\|\h\w*::',
      \}
'''
